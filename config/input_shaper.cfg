#####################################################################
# 	Input shapper
#####################################################################
[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 51.0
shaper_type_y = mzv
shaper_freq_y = 39.4

#--------------------------------------------------------------------
# https://www.klipper3d.org/Resonance_Compensation.html
#https://www.klipper3d.org/Measuring_Resonances.html
#--------------------------------------------------------------------
# Test Accelrometer
#     ACCELEROMETER_QUERY
#--------------------------------------------------------------------
# setup :
#     max_accel = 7000
#     max_accel_to_decel = 7000
#Measuring the resonances
#     TEST_RESONANCES AXIS=X
#     TEST_RESONANCES AXIS=Y
# Results
# This will generate 2 CSV files (/tmp/resonances_x_*.csv and /tmp/resonances_y_*.csv). 
# These files can be processed with the stand-alone script on a Raspberry Pi. To do that, run running the following commands:
#     ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
#     ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
# Smoothing adjustement
#     ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png --max_smoothing=0.2

#--------------------------------------------------------------------
# To check the belt tension on CoreXY printers, execute
#     TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data
#     TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data
# and use graph_accelerometer.py to process the generated files, e.g.
#     ~/klipper/scripts/graph_accelerometer.py -c /tmp/raw_data_axis*.csv -o /tmp/resonances.png
# -------------------------------------------------------------------
# Input Shaper auto-calibrationÂ¶
#     SHAPER_CALIBRATE
#     SHAPER_CALIBRATE AXIS=X
#     SHAPER_CALIBRATE AXIS=Y
#     SAVE_CONFIG